version: "3"

services:

  waf3_dep:
    # Image build: WAF3 dependencies. Build an intermediate WAF3 base image to 
    # save time on subsequent builds.
    build:
        context: ./waf3_dep
        dockerfile: Dockerfile
    image: waf3_dep:latest

  waf3:
    # Image build: WAF3. Use the intermediate "waf3_dep" base image to build the final 
    # "waf3" image. This image is simply NGINX built with the ModSecurity Web 
    # Application Firewall (WAF) extension. 
    build:
        context: ./waf3
        dockerfile: Dockerfile
    image: waf3:latest
    
  nginx:
    # Image build: NGINX. Use the "waf3" base image to build the "nginx" image that will
    # eventually run as a service. When the container is initially brought up it will 
    # call Certbot to obtain TLS/SSL certificates.
    restart: always
    build:
      context: ./nginx
      dockerfile: Dockerfile
    container_name: nginx0
    environment:
      CERTBOT_EMAIL: test@test.com
    ports:
      # Map the ports on the host to ports in the docker container:
      - 80:80/tcp
      - 443:443/tcp
    volumes:
        #-----------------------------------------------------------------------------# 
        #     Set up bind volumes. Map host directories to container directories:     #
        #                                                                             #
        #              {Directory on host}:{Directory in docker container}            # 
        #                                                                             #
        #     For the bind mounts specified in the following, we have that            #
        #     directories on the host machine and the directories witin the           #
        #     docker container are assumed to both remain fixed.                      #
        #-----------------------------------------------------------------------------#
        # Let's Encrypt certificate directory.
        # Use ":rw" - read and write access.
        # Certbot needs to be able to write to this directory.
        - ./nginx/https/etc/letsencrypt:/etc/letsencrypt:rw
        # NGINX configuration files. Use ":ro" - read only access.
        - ./nginx/conf.d:/etc/nginx/user.conf.d:ro
        # The path to where Diffie-Hellman (DH) certificates are located.
        # Use ":ro" - read only access
        - ./nginx/dhparams:/etc/nginx/dhparams:ro

  # Service: The main web application we should direct traffic to.
  web:
    restart: always
    build:
      context: ./web
      dockerfile: Dockerfile
    container_name: web0


